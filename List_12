# List 1
def first_last6(nums):
  if 6 in [nums[0],nums[-1]]:
    return True
  else:
    return False


def same_first_last(nums):
  if len(nums) > 0 and nums[0] == nums[-1]:
    return True
  else:
    return False

def make_pi():
  return [3,1,4]


def common_end(a, b):
  if a[0] == b[0] or a[-1] == b[-1]:
    return True
  else:
    return False


def sum3(nums):
  return sum(nums)


def rotate_left3(nums):
  return [nums[1], nums[2], nums[0]]

def reverse3(nums):
  return [nums[2],nums[1],nums[0]]

def max_end3(nums):
  if nums[0] >= nums[-1]: 
    return [nums[0]]*3 
  else: 
    return [nums[-1]]*3


def sum2(nums):
   return sum(nums[:2])

def middle_way(a, b):
  return [ a[1] , b[1] ]

def make_ends(nums):
  return [ nums[0] , nums[-1] ]

def has23(nums):
  if 2 in nums or 3 in nums:
    return True
  else:
    return False


#list 2

def big_diff(nums):
  return max(nums) - min(nums)


def sum13(nums):
    sum = 0
    i = 0
    while i < len(nums):
        if nums[i] == 13:
            i = i + 2
            continue
        sum = sum + nums[i]
        i = i + 1
    return sum


def sum67(nums):
  sum = 0
  i = 0
  while i < len(nums):
    if nums[i]==6:
      while nums[i] != 7:
        i = i+1
      i = i+1
    if i < len(nums) and nums[i] != 6:
      sum = sum+nums[i]
      i = i+1
  return sum

def has22(nums):
    for i in range(len(nums) - 1):
        if nums[i] == 2 and nums[i + 1] == 2:
            return True

    return False

def lucky_13(nums):
    count = 0
    for i in range(0, len(nums), 1):
        if nums[i] == 1 or nums[i] == 3:
            count += 1
            continue
        else:
            continue
    if count > 0:
        return False
    else:
        return True


def sum_28(nums):
    count = 0
    for i in range(0, len(nums), 1):
        if nums[i] == 2:
            count += 2
            continue
        else:
            continue
    if count == 8:
        return True
    else:
        return False


def more_14(nums):
    ones = 0
    fours = 0
    for i in range(0, len(nums), 1):
        if nums[i] == 1:
            ones += 1
            continue
        elif nums[i] == 4:
            fours += 1
        else:
            continue
    if ones > fours:
        return True
    else:
        return False

def no_14(nums):
    ones = 0
    fours = 0
    for i in range(0, len(nums), 1):
        if nums[i] == 1:
            ones += 1
            continue
        elif nums[i] == 4:
            fours += 1
        else:
            continue
    if ones + fours > 1:
        return False
    else:
        return True


def count_evens(nums):
  sum = 0
  for i in range(len(nums)):
    if nums[i]%2==0:
      sum = sum+1
  return sum

def centered_average(nums):
  sum = 0
  for i in nums:
    sum = sum + i
  return (sum - max(nums) - min(nums))/(len(nums)-2)
